(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     98154,       2056]
NotebookOptionsPosition[     97378,       2034]
NotebookOutlinePosition[     97741,       2050]
CellTagsIndexPosition[     97698,       2047]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"import", "=", 
   RowBox[{"filename", "\[Function]", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\</data-source/csse_covid_19_data/csse_covid_19_time_series/\>\"", "<>",
       "filename"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"confirmed", "=", 
   RowBox[{
   "import", "[", "\"\<time_series_19-covid-Confirmed.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dead", "=", 
   RowBox[{"import", "[", "\"\<time_series_19-covid-Deaths.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"recovered", "=", 
   RowBox[{
   "import", "[", "\"\<time_series_19-covid-Recovered.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stripNonValues", "=", 
   RowBox[{
    RowBox[{"#", "[", 
     RowBox[{"[", 
      RowBox[{"5", ";;"}], "]"}], "]"}], "&"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"header", "=", 
   RowBox[{"confirmed", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parseShittyDate", "=", 
   RowBox[{"fuckoff", "\[Function]", 
    RowBox[{"DateObject", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{"ToExpression", ",", "\[IndentingNewLine]", 
        RowBox[{"Part", "[", 
         RowBox[{
          RowBox[{"StringSplit", "[", 
           RowBox[{"fuckoff", ",", "\"\</\>\""}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], "/.", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"y_", ",", "m_", ",", "d_"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"y", "+", "2000"}], ",", "m", ",", "d"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"daysSince2020", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"Composition", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"#", "-", 
          RowBox[{"UnixTime", "[", 
           RowBox[{"{", 
            RowBox[{"2020", ",", "1", ",", "1"}], "}"}], "]"}]}], 
         RowBox[{"60", " ", "60", " ", "24"}]], "&"}], ",", "UnixTime", ",", 
       "parseShittyDate"}], "]"}], ",", 
     RowBox[{"stripNonValues", "[", "header", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"onlyGerman", "=", 
   RowBox[{"data", "\[Function]", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{"data", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "\"\<Germany\>\""}], 
        "&"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"germanConfirmed", "=", 
   RowBox[{"stripNonValues", "[", 
    RowBox[{"onlyGerman", "[", "confirmed", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"germanDead", "=", 
   RowBox[{"stripNonValues", "[", 
    RowBox[{"onlyGerman", "[", "dead", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"germanRecovered", "=", 
    RowBox[{"stripNonValues", "[", 
     RowBox[{"onlyGerman", "[", "recovered", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timeSeries", "=", 
   RowBox[{"data", "\[Function]", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"daysSince2020", ",", "data"}], "}"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dayOffsetToTick", "=", 
   RowBox[{"offset", "\[Function]", 
    RowBox[{"DateString", "[", 
     RowBox[{
      RowBox[{"DatePlus", "[", 
       RowBox[{
        RowBox[{"DateObject", "[", "\"\<2020-01-01\>\"", "]"}], ",", 
        "offset"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<MonthNameShort\>\"", ",", " ", "\"\< \>\"", ",", "\"\<Day\>\""}], 
       "}"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ticksWeekly", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"day", ",", 
         RowBox[{"dayOffsetToTick", "[", "day", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"day", ",", "5", ",", "100", ",", "7"}], "}"}]}], "]"}], ",", 
     "Automatic"}], "}"}]}], ";"}]}], "Input",ExpressionUUID->"3cafef72-c1c9-\
47f2-a2a5-7e73f63e0f77"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"timeSeries", "/@", 
    RowBox[{"{", 
     RowBox[{"germanConfirmed", ",", "germanDead", ",", "germanRecovered"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Confirmed\>\"", ",", "\"\<Dead\>\"", ",", "\"\<Recovered\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", "ticksWeekly"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[83]:=",ExpressionUUID->"88fbbb6a-2064-4c5d-a0cc-12a384ac1f0b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQYN3g7vLX/9c9J7Zg8R8EHlN/g4cDOvrXo1+SNU
3heV3wDjMzpA5P0clu++LnZKhhXCb/BzaJuYbVUtzw6V93fYuC5/il40B1Te
30H+39nTFh+4oPIBDn5r+lxTt/JC+A4BDp//7YpsYheAqg9wKN64vjOgShDC
PxDg8Gi2mentyUJQ/YEOSSeUdhk3CEP1Bzr8Wcyi+PyCCFR/oIP6vcCFpaxi
UP2BDhPdxfWqrkP5DEEOV982cLx+LAHVH+SwXlvOwuWDJFR/kMPF9CMekuzS
UP1BDgGbjK3Ob4byGYIdHhQblUgdl4HqD3b4d2XKhJvzZaH6gx1KPWpTv+bK
QfUHOxydw1jxWEYeqj/E4Yi+/exfR+QdALKPdM0=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{71., 0.}, {72., 0.}, {73., 0.}, {74., 0.}, {75., 
         1.0986122886681098`}, {76., 1.0986122886681098`}, {77., 
         1.3862943611198906`}, {78., 1.791759469228055}, {79., 
         1.791759469228055}, {80., 2.0794415416798357`}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{68., 0.6931471805599453}, {69., 1.3862943611198906`}, {70., 
         1.3862943611198906`}, {71., 1.3862943611198906`}, {72., 
         1.791759469228055}, {73., 1.791759469228055}, {74., 
         1.791759469228055}, {75., 1.791759469228055}, {76., 0.}, {77., 
         2.1972245773362196`}, {78., 2.1972245773362196`}, {79., 
         2.1972245773362196`}, {80., 2.1972245773362196`}}]}}, {{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGCQAmJGIGZigIIGb4f3lr/+Oek9s4cI+KDyG3wcuJnXVr2a
/BEq74vKb4DxGR0g8n4Oy3dfFzslwwrhN/g5tE3MtqqWZ4fK+ztsXJc/RS+a
Ayrv7yD/7+xpiw9cUPkAB781fa6pW3khfIcAh8//dkU2sQtA1Qc4FG9c3xlQ
JQjhHwhweDTbzPT2ZCGo/kCHpBNKu4wbhKH6Ax3+LGZRfH5BBKo/0EH9XuDC
UlYxqP5Ah4nu4npV16F8hiCHq28bOF4/loDqD3JYry1n4fJBEqo/yOFi+hEP
SXZpqP4gh4BNxlbnN0P5DMEOD4qNSqSOy0D1Bzv8uzJlws35slD9wQ6lHrWp
X3PloPqDHY7OYax4LCMP1R/icETffvavI/IOALz/dM8=
         "]]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledSquare]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], {{{71., 0.}}, {{72., 0.}}, {{73., 
         0.}}, {{74., 0.}}, {{75., 1.0986122886681098`}}, {{76., 
         1.0986122886681098`}}, {{77., 1.3862943611198906`}}, {{78., 
         1.791759469228055}}, {{79., 1.791759469228055}}, {{80., 
         2.0794415416798357`}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledDiamond]\"", FontSize -> 10.88, StripOnInput -> False],
             TraditionalForm]], {0., 0.}], {{{68., 0.6931471805599453}}, {{
         69., 1.3862943611198906`}}, {{70., 1.3862943611198906`}}, {{71., 
         1.3862943611198906`}}, {{72., 1.791759469228055}}, {{73., 
         1.791759469228055}}, {{74., 1.791759469228055}}, {{75., 
         1.791759469228055}}, {{76., 0.}}, {{77., 2.1972245773362196`}}, {{
         78., 2.1972245773362196`}}, {{79., 2.1972245773362196`}}, {{80., 
         2.1972245773362196`}}}]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {54.609375, -0.5764617753150727}, 
     PlotRange -> {{55., 80.}, {-0.4412423465374631, 7.942362237674335}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {54.609375, -0.5764617753150727}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{55., 80.}, {-0.4412423465374631, 7.942362237674335}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{{5, 
         FormBox["\"Jan 06\"", TraditionalForm]}, {12, 
         FormBox["\"Jan 13\"", TraditionalForm]}, {19, 
         FormBox["\"Jan 20\"", TraditionalForm]}, {26, 
         FormBox["\"Jan 27\"", TraditionalForm]}, {33, 
         FormBox["\"Feb 03\"", TraditionalForm]}, {40, 
         FormBox["\"Feb 10\"", TraditionalForm]}, {47, 
         FormBox["\"Feb 17\"", TraditionalForm]}, {54, 
         FormBox["\"Feb 24\"", TraditionalForm]}, {61, 
         FormBox["\"Mar 02\"", TraditionalForm]}, {68, 
         FormBox["\"Mar 09\"", TraditionalForm]}, {75, 
         FormBox["\"Mar 16\"", TraditionalForm]}, {82, 
         FormBox["\"Mar 23\"", TraditionalForm]}, {89, 
         FormBox["\"Mar 30\"", TraditionalForm]}, {96, 
         FormBox["\"Apr 06\"", TraditionalForm]}}, 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{"\"Confirmed\"", "\"Dead\"", "\"Recovered\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10.88}, {20, 10.88}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], FontSize -> 10.88, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10.88}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledDiamond]\"", ",", "10.88`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[83]=",ExpressionUUID->"1d6c77c5-e295-4326-9af6-66fe8f621e0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"logExtrapolation", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dataInput", ",", "startDayString", ",", "daysToExtrapolate"}], 
     "}"}], "\[Function]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", "=", "dataInput"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"startDay", "=", 
        RowBox[{"DateValue", "[", 
         RowBox[{"startDayString", ",", "\"\<ISOYearDay\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"data", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"data", ",", 
          RowBox[{
           RowBox[{"#", "/.", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"t_", ",", "_"}], "}"}], "\[Rule]", 
             RowBox[{"t", "\[GreaterEqual]", "startDay"}]}]}], "&"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"expFit", "=", 
        RowBox[{"NonlinearModelFit", "[", 
         RowBox[{"data", ",", 
          RowBox[{"Exp", "[", 
           RowBox[{"a", " ", 
            RowBox[{"(", 
             RowBox[{"x", "-", "x0"}], ")"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "0.3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x0", ",", "40"}], "}"}]}], "}"}], ",", "x"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"logisticFit", "=", 
        RowBox[{"NonlinearModelFit", "[", 
         RowBox[{"data", ",", 
          RowBox[{"a", "*", 
           RowBox[{"CDF", "[", 
            RowBox[{
             RowBox[{"LogisticDistribution", "[", 
              RowBox[{"x0", ",", "\[Beta]"}], "]"}], ",", "x"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "60000"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Beta]", ",", "3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x0", ",", "80"}], "}"}]}], "}"}], ",", "x"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"timeCoordinates", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "/.", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"t_", ",", "_"}], "}"}], "\[Rule]", "t"}]}], "&"}], ",",
           "data"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"from", ",", "to"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Min", "[", "timeCoordinates", "]"}], ",", 
          RowBox[{"Max", "[", "timeCoordinates", "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"mmaColors", "=", 
        RowBox[{"ColorData", "[", 
         RowBox[{"1", ",", "\"\<ColorList\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dataPlot", "=", 
        RowBox[{"ListPlot", "[", 
         RowBox[{"data", ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"mmaColors", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", "\"\<Data\>\"", "}"}]}], ",", 
          RowBox[{"Ticks", "\[Rule]", "ticksWeekly"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"expModelPlot", "=", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"expFit", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "from", ",", 
            RowBox[{"to", "+", "daysToExtrapolate"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"mmaColors", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Row", "@", 
             RowBox[{"{", 
              RowBox[{"\"\<Model: \>\"", ",", 
               RowBox[{"Normal", "[", "expFit", "]"}]}], "}"}]}], "}"}]}], 
          ",", 
          RowBox[{"Ticks", "\[Rule]", "ticksWeekly"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"logisticModelPlot", "=", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"logisticFit", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "from", ",", 
            RowBox[{"to", "+", "daysToExtrapolate"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"mmaColors", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Row", "@", 
             RowBox[{"{", 
              RowBox[{"\"\<Model: \>\"", ",", 
               RowBox[{"Normal", "[", "logisticFit", "]"}]}], "}"}]}], 
            "}"}]}], ",", 
          RowBox[{"Ticks", "\[Rule]", "ticksWeekly"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dataLogPlot", "=", 
        RowBox[{"ListLogPlot", "[", 
         RowBox[{"data", ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"mmaColors", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", "\"\<Data\>\"", "}"}]}], ",", 
          RowBox[{"Ticks", "\[Rule]", "ticksWeekly"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"expModelLogPlot", "=", 
        RowBox[{"LogPlot", "[", 
         RowBox[{
          RowBox[{"expFit", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "from", ",", 
            RowBox[{"to", "+", "daysToExtrapolate"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"mmaColors", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Row", "@", 
             RowBox[{"{", 
              RowBox[{"\"\<Model: \>\"", ",", 
               RowBox[{"Normal", "[", "expFit", "]"}]}], "}"}]}], "}"}]}], 
          ",", 
          RowBox[{"Ticks", "\[Rule]", "ticksWeekly"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"logisticModelLogPlot", "=", 
        RowBox[{"LogPlot", "[", 
         RowBox[{
          RowBox[{"logisticFit", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "from", ",", 
            RowBox[{"to", "+", "daysToExtrapolate"}]}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"mmaColors", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Row", "@", 
             RowBox[{"{", 
              RowBox[{"\"\<Model: \>\"", ",", 
               RowBox[{"Normal", "[", "logisticFit", "]"}]}], "}"}]}], 
            "}"}]}], ",", 
          RowBox[{"Ticks", "\[Rule]", "ticksWeekly"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"combinedShow", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"d", ",", "m", ",", "l"}], "}"}], "\[Function]", 
         RowBox[{"Show", "[", 
          RowBox[{"d", ",", " ", "m", ",", "l", ",", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{
             RowBox[{"ToString", "[", "daysToExtrapolate", "]"}], "<>", 
             "\"\< days extrapolation\>\""}]}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"expFit", ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Doubling every \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"Round", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"Log", "[", "2", "]"}], 
              RowBox[{"a", "/.", 
               RowBox[{"expFit", "[", "\"\<BestFitParameters\>\"", "]"}]}]], 
             ",", "0.1"}], "]"}], "]"}], "<>", "\"\< days\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"expFit", "[", "\"\<ParameterTable\>\"", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"logisticFit", "[", "\"\<ParameterTable\>\"", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"combinedShow", "[", 
          RowBox[{
          "dataPlot", ",", " ", "expModelPlot", ",", "logisticModelPlot"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"combinedShow", "[", 
          RowBox[{
          "dataLogPlot", ",", " ", "expModelLogPlot", ",", 
           "logisticModelLogPlot"}], "]"}]}], "\[IndentingNewLine]", 
        "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"logExtrapolation", "[", 
    RowBox[{
     RowBox[{"timeSeries", "[", "germanConfirmed", "]"}], ",", 
     "\"\<2020-02-17\>\"", ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"result", "/.", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"_", ",", "rest__"}], "}"}], "\[Rule]", 
   RowBox[{"Column", "[", 
    RowBox[{"List", "[", "rest", "]"}], "]"}]}]}]}], "Input",
 CellLabel->"In[98]:=",ExpressionUUID->"3a6af54e-8b92-443c-a1db-7cd3cfdb5ec2"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Doubling every 3.2 days\"\>"},
    {
     StyleBox[
      TagBox[GridBox[{
         {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
         {"a", "0.21815481931350894`", "0.005327493101037561`", 
          "40.948869416841106`", "1.4783792957544274`*^-28"},
         {"x0", "43.36581171884638`", "0.8517988564891555`", 
          "50.91085928148165`", "1.9060367944729107`*^-31"}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
        GridBoxDividers->{
         "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
          "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{
         "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
       "Grid"], "DialogStyle",
      StripOnInput->False]},
    {
     StyleBox[
      TagBox[GridBox[{
         {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
         {"a", "5081.034550603558`", "211.24782901414238`", 
          "24.05248174296456`", "3.653540350743136`*^-21"},
         {"\[Beta]", "3.220087298673708`", "0.0639527678324263`", 
          "50.35102322875556`", "1.5208643928923964`*^-30"},
         {"x0", "79.34419813884709`", "0.26039719529082606`", 
          "304.7045036342695`", "6.283111634881129`*^-54"}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
        GridBoxDividers->{
         "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
          "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{
         "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
       "Grid"], "DialogStyle",
      StripOnInput->False]},
    {
     TemplateBox[{GraphicsBox[{{{}, {{{}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[0.24720000000000014`, 0.24, 0.6]], 
             PointBox[CompressedData["
1:eJxdj60KAkEURi8mX2PNJsEoTDD4/7OaTIugUUEMNieYLBaLSRAEH8G4j7CP
sA9iUJlzxb0Dw+Hcbz64E83X8aIkItHnfhlOy8n/8calbXLj0jG5cema/Oew
V3SvXob9onv1ChzAKrl6DQ5hnVy9AUfMm4FOnT09nk4gLjM4DkwS+ni6pK++
gni+oR/zbk8f3x2Y4/mRPp6d6LNXdqaPPy/08e21+I/Hjf408HV3b7ZQOI4=

              "]]}, {}}}, {}, {}, {}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0.6, 0.24, 0.4428931686004542]], 
              LineBox[CompressedData["
1:eJwVjXk01AkAx2e3DCFZNZgJXdpMOcsiE31Tj3HP9XPtbG1IhSlpGsq0iSLp
MGMp5ZjYyVTL6qKHMTOUlYitJSskS9SmJw+tnmPbPz7v8z5/fVaFH+Ts+ZpE
Ivl/4X8rJQSZRGJiWe7F/MMzWniTJ+87/BUT5SSXxXt1yTAsnqwc/pqJRp2l
IRGmZITfydnbpsUENaZHKnIkg/y8o6lQjwnh0KCrjoAM1rKgTDcTJubCX7N7
X5ExkBtkmGTLxOO7DjsSWrShnR9Mm+IzcTBvcX9N/SIc+zlkXKlhwn5ziLY0
1wAJd0yWda3wRv1G0djuiW/Q60IoqGJvhCrLYhcsoCCmTEKy6feGFUPK+P4f
U6R6nSuWuvlgLHrH8uUu5mhoO63TXOwDzZLgS678VRCoZ/utyL6Ylv9oGJVl
CVnnpgXd4b6Ya9r1IJRihZnufW/5v/si7+jjKn6ONV4v5FM3rvUDvejj1g2P
7GF/qbXG9qQf3iuq83sLNqHUxH317KAfflHJ9htsc4ZCGfvM3MMfwQXbz+pt
Y+AP9hVPw1J/fPYctYqzAyICPG3W6wbA2I4q6qJvx4m4ih9yowKQ4SN2azng
iYZkKufP5gC0PY/Vqc73gaQSWZFWgZhwbrU87RSIM91R0sbzgTh6Xzew4xwH
I1F62qyPgcgsOEtr/0xgv37VAGUdCxey1ycqVKGI7xkuiQ1lobAzsjVTshNQ
fcqIPcPCrwbyVtnYbnh0etKTK1kQOpUJymYjERqZc1M8wsJVWo3d27/3wVGr
gbXahI34crc+Q1sBLM3Huiq82TB+m8IVE4fA3M+ncZPYmLw2zz6eLoRDU2ly
4Q02HoaJYjsXJcK2cLzp2Us2WP+u/BCdJsZYmplThS4H+3zfBV+vScZwyWn+
NRcOGp7xHLslqRh3/hCZFM2BfuUtp0aHdNT3fSedu8xBm30c5Z1NJq7PiK9F
P+FgZoDtFbYmC4E2JR0nPnNg4ec2dXFcCmupToPCiovxQ3lCY5tcWBwQSKvD
uLhcrvh0yf8KOvi3045kcHGMXLCH01UIWf0En1rLhbzCg6bNK0YRP+F9+ygX
g1Pnm9Ir5YhY9JfMwYwHBN1NTTtwAwwbV+ekAB4yyi0MXtmVoyvi2LjgOA+D
JjJJSuVt3Hw6HSW8xUNjGKO17sE9ZFUkKiN6eZB4aa03kjwAQ97pMqNHoMo2
1UjxpBYpRW+8WvQJvJ4u5y7vr0Vz3lRQ/mICJ9FLK5ioRdgF4yNblhB4k3w2
ssVcicSEoNtiIwLC0Qbtl3FK3PPupM+aEqj/bbBaQ62D7YcO2txaAhZ9no/n
RSqIRoboT78lEE8/FRxyXgXlwKRL4ToCT8UxD9UlKvi9oAS70wmI3Im9mnYV
YtRE9k/WBNb0ZKVrKGoopB168xsJlOY2T+nEqzF2bojWtokAb6lPf+VxNZzT
J+lFjl/+ZnYUQYYajUkU5lYnAvoGdYnjMjWGIolTJzYTeNc73LK7XQ3rXXuy
A10JGBsfrOL0qCEMPVK8gkGAXPXRzG9EjYUBOWrVFgKJFQsPhZA08GPK2y66
EdggLouJ0dcg2+N+3y53AtP5KdNpphp0b3k0areVQJ3B1ZW3LDVY7dwxM/+l
d640Gn5hr8F/MG0r4Q==
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$62558#1"]& ]}}, {}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0.6, 0.5470136627990908, 0.24]], 
              LineBox[CompressedData["
1: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
               "]]}, 
             Annotation[#, "Charting`Private`Tag$62702#1"]& ]}}, {}, {}}}, {
        ImageSize -> Large, PlotRange -> All, PlotLabel -> 
         FormBox["\"5 days extrapolation\"", TraditionalForm], 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {47.5, 0}, 
         PlotRange -> {{48., 80.}, {0, 2814.}}, PlotRangeClipping -> True, 
         ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {47.5, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {{48., 80.}, {0, 2814.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {{{5, 
             FormBox["\"Jan 06\"", TraditionalForm]}, {12, 
             FormBox["\"Jan 13\"", TraditionalForm]}, {19, 
             FormBox["\"Jan 20\"", TraditionalForm]}, {26, 
             FormBox["\"Jan 27\"", TraditionalForm]}, {33, 
             FormBox["\"Feb 03\"", TraditionalForm]}, {40, 
             FormBox["\"Feb 10\"", TraditionalForm]}, {47, 
             FormBox["\"Feb 17\"", TraditionalForm]}, {54, 
             FormBox["\"Feb 24\"", TraditionalForm]}, {61, 
             FormBox["\"Mar 02\"", TraditionalForm]}, {68, 
             FormBox["\"Mar 09\"", TraditionalForm]}, {75, 
             FormBox["\"Mar 16\"", TraditionalForm]}, {82, 
             FormBox["\"Mar 23\"", TraditionalForm]}, {89, 
             FormBox["\"Mar 30\"", TraditionalForm]}, {96, 
             FormBox["\"Apr 06\"", TraditionalForm]}}, Automatic}}],FormBox[
        TagBox[
         GridBox[{{
            FormBox[
             
             TemplateBox[{"\"Data\""}, "PointLegend", 
              DisplayFunction -> (StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]& ), 
              InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.1648000000000001, 0.16, 0.4], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.24720000000000014`", ",", "0.24`", ",", 
                    "0.6`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], Editable -> 
                    False, Selectable -> False]}], "]"}], "}"}], ",", 
                   RowBox[{"{", #, "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                   
                   RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "False", "}"}]}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                 "]"}]& ), Editable -> True], TraditionalForm]}, {
            FormBox[
             TemplateBox[{
               TemplateBox[{"\"Model: \"", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"0.21815481931350894`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "43.36581171884638`"}], "+", "x"}], 
                    ")"}]}]]}, "RowDefault"]}, "LineLegend", 
              DisplayFunction -> (StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]& ), 
              InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4, 0.16, 0.2952621124003028], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.6`", ",", "0.24`", ",", 
                    "0.4428931686004542`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.4428931686004542]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.24, 0.4428931686004542], Editable -> 
                    False, Selectable -> False]}], "]"}], "}"}], ",", 
                   RowBox[{"{", #, "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                 "]"}]& ), Editable -> True], TraditionalForm]}, {
            FormBox[
             TemplateBox[{
               TemplateBox[{"\"Model: \"", 
                 FractionBox["5081.034550603558`", 
                  RowBox[{"1", "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "0.3105505867533097`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "79.34419813884709`"}], "+", "x"}], 
                    ")"}]}]]}]]}, "RowDefault"]}, "LineLegend", 
              DisplayFunction -> (StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]& ), 
              InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4, 0.36467577519939387`, 0.16], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.6`", ",", "0.5470136627990908`", ",", 
                    "0.24`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.5470136627990908, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.5470136627990908, 0.24], Editable -> 
                    False, Selectable -> False]}], "]"}], "}"}], ",", 
                   RowBox[{"{", #, "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                 "]"}]& ), Editable -> True], TraditionalForm]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{GraphicsBox[{{{}, {{{}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[0.24720000000000014`, 0.24, 0.6]], 
             PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQYN3g7vLX/9c9J7Zg8R8EHlN/g4cDOvrXo1+SNU
3heV3wDjMzpA5P0clu++LnZKhhXCb/BzaJuYbVUtzw6V93fYuC5/il40B1Te
30H+39nTFh+4oPIBDn5r+lxTt/JC+A4BDp//7YpsYheAqg9wKN64vjOgShDC
PxDg8Gi2mentyUJQ/YEOSSeUdhk3CEP1Bzr8Wcyi+PyCCFR/oIP6vcCFpaxi
UP2BDhPdxfWqrkP5DEEOV982cLx+LAHVH+SwXlvOwuWDJFR/kMPF9CMekuzS
UP1BDgGbjK3Ob4byGYIdHhQblUgdl4HqD3b4d2XKhJvzZaH6gx1KPWpTv+bK
QfUHOxydw1jxWEYeqj/E4Yi+/exfR+QdALKPdM0=
              
              "]]}, {}}}, {}, {}, {}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0.6, 0.24, 0.4428931686004542]], 
              LineBox[CompressedData["
1:eJwVj3k41HkAh1GO6HDkGOX4/TqGwpbKIPw+zW4MjTEzfEXPlOeJKMdi10w9
jdBWNlLrSNLhTKxWi0q17TxZnkqUqdbYkqx0jM6dbOjAbPvH+7zP++dLbU4W
b9HT0dEJ/sL/VhQQAx0dHuoCBMX/uGiY56U1A9/r8sBPlMdbcDSMadVoi1qP
hw/5dQxnjYbZ3Fwcp9TnAX16LzOIhjH4U9VRZsLDncSLfrMzNIxwbvgBX2se
tAWOwy5KDTN0JNxU7saDsH/EOz71HWN4Yr3tmISH8ZSSwacXRpidhyNGFH/w
sKHoVlyKdJTZ3mw9975DILan8fZIDD4wjzxJHSs9EAo2t3VL7icmoaFAx3Uw
EGY9bC/9tZPMnoC8qkLfINgzYf76d7VMu3KfUWdVEE6KWm7cDtRFUuvkoJPB
OrQl6u6qPaWHit4V0/o2r8MadXL68uFpmOjb+kJyYx2CNvWUGgTo4/F0Cct9
ER8NKyW6eYcMsKzk9hW33Xw4va/6WK40RK21Hz35lA/nxr/naJfOQJ0i8Z4d
Nxj7u5iU2anGuCs65m9aG4ykJ8Vvt941QbTA33WJsQBxT+snRUtnITOlceOR
WAEU3zwJf5U0G+1ZLHFPpwDHK826lV1zUNCC/BinELw62xTgnmOK/X2xhdcP
hiD4AOHQ3mYYjjUxFL4LgXd/RPIDtRm2zbw4ZMkWQtWfdGs4xxzf9aurEyOF
OPdw16WTXhbA1fGcxP1CILf8Zv0jC3B7/Z2zWoQgDY4LMjPmIjKmuD59WIjm
7hMmH10ssVK/XUhbi3C5fAmrS2mJhXaa+42BIhgmn7vAzbICb5vENlQuwkDz
8WO7Xa2xvKM2q+xnEaJPF5+yUVrDrWyk495DEVyO5vqSDBtosud7NBqLUe1V
8PkFxYK6ep+k0lOM0yHjuv5tLIxw3sbI48V4HR1REpBii7aBVYVTR8V4zO4S
VZrPw+mJ9Mr4LjFYLz2PV7TNQ4hrtSrzkxg6kkszPsTOh0uhUXudUyiSuSWt
VkZ2sP82qfC3DaFYxE41eNhiB5WkKVuaE4rcK5LU8Uh7VLS9l7B+D4W74OuE
y8YOKJdsf33nTSiiSU4D95IDomc8qFg+PwxUdoqxuasjVrt6c+SCMDQPlu5T
7XXE/eidI0m7wmBrwbe41uuI+u6PsWlnwnBT67rWhk0hv3GHIvpRGEoTDvr5
ZVBYXdPrOWFCgF+lQflKCj+UPw+4NZPgRvOquM93KHSWjoWfmEUQ0jK6J/Ye
hQ2HrKQ+cwiiFFKFj4rCju3hTenmBPIu6bIXfRTOB/Y6T9oQnFdLrbjPKbi9
VdlOLSJwdpQN/TtBQTb8zLl7MUHTAg/tpikKiqFRzzI2AYc9Nq9TS4H/l+V6
P2eCtW4yUqFHI6GVFGW4EMT4yDr4RjTqClUmWneCsgjZ2RoLGpq8Z7bKFQSL
JR5dppY0OD+OOpevJPglakwtt6JxXW7JYzwIrsTKKDGLxrMYsjfTi+BBmuzw
lD0Nl6gtRSHeX352eDRtc6SRFimtclhNoJaP3e6haEwXFLde9SEY/0FmeGYh
DT6vRvmTL0FmtsdCq8U0irgXBqL8CPRzx7CbTaPP59qbrxiCvIMtG1870aA5
qgntl7YokO1cv4TGf18GFq8=
               "]]}, 
             Annotation[#, 
              "Charting`Private`Tag$63158#1"]& ]}}, {}, {}}, {{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0.6, 0.5470136627990908, 0.24]], 
              LineBox[CompressedData["
1:eJwVzms0lAkAxvFZSUQnSWkmk7dOGB20CLk1T/eRycyY99XWjrW5JpeUpG2m
UAmlYkQRkhJLWnU26WKGlEQbXUbWbUUMbbUitYT23Q/P+Z/ft2ex3y6vQA0G
g7GV3v+tSqO0GAwepiWtk611GFH2ZxV2RX3Hg6BZFvXSfESpXzBaodbgofm5
emcgc0TpdyMjuGk6D+YK722JE8NKrReq+jxdHnxccl0a7w8rhYbeJ9yMeFA/
Gp0hFgwrezK99aXWPOhXmj722/FROSNnC+uzhAdnqc3H6fb/KA+c+WG4qoaH
+O3QNvdTK2NuGBm2mrijd8rtrZ5ht7JzJVXMlLnDXd2y2Ef1TBlalsaw6nYH
z+ZuYqdvgfLIxpQCudsm6A1EzckOrufWNiVoNxRsQvwSdjD7bTs3vHqym6Pl
gUJJa7V/aR83v8VuWpufB+4ssJ/d2fGOO9G2Y1DyyAOhNRafbpPD3NeaEqat
KR8rIk7tO/nvKPf7s3/ctY7n4/jr6kW9yWPcIqNVSybf8LE7d0BQsGOSW1wV
9py9ZjN8Q+0Ldhxm4Jkoe4N+0WYc19AMYcdowN9zg9WymZ7QS/YvDvfTRGxk
uU9mkCe+hVTZ+lhqoTaO6fWywRPlhxbmXTXWRloFUgM4Aqyr44RL/9ZBUluQ
vO6kAH6W1Uqfbl0MBOnOEH4UoOTO+akfG2chRO9WzzxzITS6S18kn5mNPR3q
S2FbhRhQHVl9uEYfUH5JDksSwrkoZ/XlojlY07LBIq5CCEVnoVN4kgG2BmSU
yAaEGLcLNCOkc7Fieq1wiZEI7yojl6+WGGIpe6i13F2ED+cZfwV5zgMvRMIS
S0XQELGdGp3mw6a+KC7vVxGm2lnltQZGsM4brn/eLkJmWp5jxrgRho4ZO5TP
9IJ3RZkVo2kB1JcSJBdXeqH5aIeiMpuJYccPAdKdXnCoJpbd3s3C/S57+dQ5
2mOR/WftFuLKhOzizkYvnNrYwzGdXAiB1SVV7LgXIp/pPZpRbgxLuXZtMUcM
Z7WxWRLFxqKIcPmdbWIoXFjqpxNsqCTXj0Uni7GJzK2QpSxC/v1PEuY9MfgN
27a/YprggiTmXfN7MaYN1nSUZZjAX+fPfBtjEqnr7fJavprAxcrZUepJwuxs
ZJe9NYFW/wPD4QdJhInezB8jCZQ8HQvaW0ri8UPbdbJoArYN4qWuV0lcjSpb
MEX79sOy19PKSMhlZGrsPgL197ZL0q+ROJbzIiQ+hoC65LHoxnUS/Pf8hrhf
CCxNzHIdukWCuVEvOOIggVyuk0HYAxLseNZqrQQCqeX7q/w7SfQatpvYphPw
5wSZLOoioRWu6Mmk7ZAvjm+lPack+KevtNtPW6/f3E1iV0JuXO0ZAma73jxx
6CVxuVW+V5hJ4K6VsENnkET2iWPOPlkE+kvMv/72iYTnVJ7b2gsEXApbVk7o
Uui/MTTXvYTA4Qv9G5/oUWAdfzB4hXZD1mfvnFkUAhicPZqlBLadmh/tOpuC
fFbgeQXt/THe12UGFAxSONTyMgK/u7dYTC6gkLLMLU2jnID1BxVrypRCPF9x
dPdNAvsG+iyemlHIlgn06mhX9YyuzDOn0FaXyWdVEOC/mrdllQWFEwE6/9bQ
Dq2m0g9ZUnD69OjbrEoCxXKV7jdbCswXdRPn7hAYSuljNdlR4HiIzAZpOyaO
WlxYQUGSKNd1ukugTjqPx3WgYHroi04r7b4A6misE4WE3dJ2gyoClr6B6QJn
Ch8PvVP/THvv1ugCExcKPWanr1+jremZUa10pXAz2fSgu4L+xytsOu1GIXpV
TGwm7fQ1N7t8V1FYG1/B7aXd5vrw/XIuhQYzA8VyJYEljqqJb7QjRirHpbT/
A1fsfQk=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$63305#1"]& ]}}, {}, {}}}, {
        ImageSize -> Large, PlotRange -> All, PlotLabel -> 
         FormBox["\"5 days extrapolation\"", TraditionalForm], 
         DisplayFunction -> Identity, GridLines -> {None, None}, 
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {54.609375, 0.1669944748016428}, 
         PlotRange -> {{55., 80.}, {0.29041301072025694`, 7.942362237674335}},
          PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {54.609375, 0.1669944748016428}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
            Charting`ScaledTicks[{Log, Exp}], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Exp[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{55., 80.}, {0.29041301072025694`, 7.942362237674335}},
          PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {{{5, 
             FormBox["\"Jan 06\"", TraditionalForm]}, {12, 
             FormBox["\"Jan 13\"", TraditionalForm]}, {19, 
             FormBox["\"Jan 20\"", TraditionalForm]}, {26, 
             FormBox["\"Jan 27\"", TraditionalForm]}, {33, 
             FormBox["\"Feb 03\"", TraditionalForm]}, {40, 
             FormBox["\"Feb 10\"", TraditionalForm]}, {47, 
             FormBox["\"Feb 17\"", TraditionalForm]}, {54, 
             FormBox["\"Feb 24\"", TraditionalForm]}, {61, 
             FormBox["\"Mar 02\"", TraditionalForm]}, {68, 
             FormBox["\"Mar 09\"", TraditionalForm]}, {75, 
             FormBox["\"Mar 16\"", TraditionalForm]}, {82, 
             FormBox["\"Mar 23\"", TraditionalForm]}, {89, 
             FormBox["\"Mar 30\"", TraditionalForm]}, {96, 
             FormBox["\"Apr 06\"", TraditionalForm]}}, 
           Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
        TagBox[
         GridBox[{{
            FormBox[
             
             TemplateBox[{"\"Data\""}, "PointLegend", 
              DisplayFunction -> (StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]& ), 
              InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.1648000000000001, 0.16, 0.4], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.24720000000000014`", ",", "0.24`", ",", 
                    "0.6`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], Editable -> 
                    False, Selectable -> False]}], "]"}], "}"}], ",", 
                   RowBox[{"{", #, "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                   
                   RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "False", "}"}]}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                 "]"}]& ), Editable -> True], TraditionalForm]}, {
            FormBox[
             TemplateBox[{
               TemplateBox[{"\"Model: \"", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"0.21815481931350894`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "43.36581171884638`"}], "+", "x"}], 
                    ")"}]}]]}, "RowDefault"]}, "LineLegend", 
              DisplayFunction -> (StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]& ), 
              InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4, 0.16, 0.2952621124003028], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.24`", ",", 
                    "0.4428931686004542`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.24, 0.4428931686004542]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.24, 0.4428931686004542], Editable -> 
                    False, Selectable -> False]}], "]"}], "}"}], ",", 
                   RowBox[{"{", #, "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                 "]"}]& ), Editable -> True], TraditionalForm]}, {
            FormBox[
             TemplateBox[{
               TemplateBox[{"\"Model: \"", 
                 FractionBox["5081.034550603558`", 
                  RowBox[{"1", "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "0.3105505867533097`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "79.34419813884709`"}], "+", "x"}], 
                    ")"}]}]]}]]}, "RowDefault"]}, "LineLegend", 
              DisplayFunction -> (StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]& ), 
              InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4, 0.36467577519939387`, 0.16], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.6`", ",", "0.5470136627990908`", ",", 
                    "0.24`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.5470136627990908, 0.24]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.5470136627990908, 0.24], Editable -> 
                    False, Selectable -> False]}], "]"}], "}"}], ",", 
                   RowBox[{"{", #, "}"}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                   RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                 "]"}]& ), Editable -> True], TraditionalForm]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellLabel->
  "Out[100]=",ExpressionUUID->"0b4de002-728f-4431-b3c2-fae3f8db924c"]
}, Open  ]]
},
WindowSize->{1278, 1359},
WindowMargins->{{6, Automatic}, {3, Automatic}},
TrackCellChangeTimes->False,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4484, 130, 521, "Input",ExpressionUUID->"3cafef72-c1c9-47f2-a2a5-7e73f63e0f77"],
Cell[CellGroupData[{
Cell[5067, 154, 840, 18, 193, "Input",ExpressionUUID->"88fbbb6a-2064-4c5d-a0cc-12a384ac1f0b"],
Cell[5910, 174, 22574, 473, 377, "Output",ExpressionUUID->"1d6c77c5-e295-4326-9af6-66fe8f621e0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28521, 652, 9675, 233, 899, "Input",ExpressionUUID->"3a6af54e-8b92-443c-a1db-7cd3cfdb5ec2"],
Cell[38199, 887, 59163, 1144, 956, "Output",ExpressionUUID->"0b4de002-728f-4431-b3c2-fae3f8db924c"]
}, Open  ]]
}
]
*)

